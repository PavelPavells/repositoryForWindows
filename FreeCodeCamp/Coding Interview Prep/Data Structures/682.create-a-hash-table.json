{"index.js":"var called = 0;\nvar hash = (string) => {\n  called++;\n  var hash = 0;\n  for (var i = 0; i < string.length; i++) { hash += string.charCodeAt(i); }\n  return hash;\n};\nvar HashTable = function() {\n  this.collection = {};\n\n  // change code below this line\n  \n  this.add = function(key,value){\n        let inikey = key;\n        let hashed = hash(key);\n        let nmp = Object.create(null,{});\n        nmp[inikey] = value;\n\n        if(this.collection.hasOwnProperty(hashed)){\n            this.collection[hashed][inikey] = value;\n            return;\n        } else {\n          this.collection[hashed] = {};\n          this.collection[hashed][inikey] = value;\n        }\n\n        \n\n\n  }\n\n  this.remove = function(key){\n    \n            let inikey = key;\n            let hashed = hash(key);\n            if(hashed in this.collection){\n\n                delete this.collection[hashed][inikey];\n                if(Object.keys(this.collection[hashed]).length < 1){\n              delete this.collection[hashed];\n            }\n                   \n            } else {\n              console.log('is not');\n              return;\n            }\n      \n  }\n\n  this.lookup = function(key){\n          let inikey = key;\n            let hashed = hash(key);\n            if(this.collection.hasOwnProperty(hashed)){\n                if(this.collection[hashed].hasOwnProperty(inikey)){\n                    return this.collection[hashed][inikey];\n                }\n            } else {\n              return null;\n            }\n  \n\n  // change code above this line\n };\n}\nvar test = new HashTable();\ntest.add('key1', 'value1');\ntest.add('1key', 'value2');\ntest.add('ke1y', 'value3');\ntest.add('new', 'fdsfdsg');\n//test.remove('key1y'); // test for non existent key\n//test.remove('new');  // remove element from the bucket and the bucket\n//test.remove('ke1y'); //remove element from the bucket\ntest.remove('key1');\ntest.remove('new');\ntest.remove('1key');\nconsole.log(test.collection);"}