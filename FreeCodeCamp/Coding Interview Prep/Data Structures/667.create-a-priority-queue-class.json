{"index.js":"/*function PriorityQueue () {\n    var collection = [];\n   // var item;\n    this.printCollection = function() {\n      console.log(this.collection);\n    };\n     //Only change code below this line\n    this.enqueue = function(newItem) {\n      if(collection.length === 0) {\n        collection.push(item);\n      } else {\n        var inserted = false;\n        collection = collection.reduce(function(newCollection, item) {\n          if(newItem[1] < item[1] && !inserted) {\n            newCollection.push(newItem);\n            inserted = true;\n          }\n          newCollection.push(item);\n          if(newItem[1] == item[1] && !inserted) {\n            newCollection.push(newItem);\n            inserted = true;\n          }\n          return newCollection;\n        }, []);\n        if(!inserted) {\n          collection.push(newItem);\n        }\n      }\n      return collection;\n    }\n    this.dequeue = function() {\n      if(collection.length > 0) {\n        var item = collection.shift();\n        return item[0];\n      } else {\n        return 'The queue is empty.'\n      }\n    }\n    this.front = function() {\n      return collection[0];\n    }\n    this.size = function() {\n      return collection.length;\n    }\n    this.isEmpty = function() {\n      return collection.length > 0 ? fasle : true;\n    }\n    // Only change code above this line\n}\n\nfunction PriorityQueue () {\n    this.collection = [];\n    this.printCollection = function() {\n      console.log(this.collection);\n    };\n    this.enqueue = function(element){\n      if(this.isEmpty())\n        this.collection.push(element);\n      else if(this.collection[this.size() - 1][1] > element[1]) \n        this.collection.push(element);\n      else if(this.collection[0][1] <= element[1]) \n        this.collection.unshift(element)\n      else{\n        for(let i = 1; i < this.size(); i++){\n          if(element[1] >= this.collection[i][1]){\n            this.collection.splice(i, 0, element);\n            break;\n          }\n        }\n      }\n      \n    }\n\n    this.dequeue = function(){\n      var value = collection.shift();\n      return value[0];\n    }\n\n    this.front = function(){\n      return this.collection[this.collection.length];\n    }\n\n    this.isEmpty = function(){\n      return this.collection.length == 0;\n    }\n\n    this.size = function(){\n      return this.collection.length;\n    }\n}\n*/\nfunction PriorityQueue () {\n    var collection = [];\n    this.printCollection = function() {\n      console.log(this.collection);\n    };\n    this.enqueue = function(element) {\n      if(this.isEmpty()) {\n        collection.push(element);\n      } else {\n        var added = false;\n        for(var i = 0; i < collection.length; i++) {\n          if(element[1] < collection[i][1]) {\n            collection.splice(i, 0, element);\n            added = true;\n            break;\n          }\n        }\n        if(!added) {\n          collection.push(element);\n        }\n      }\n    };\n    this.dequeue = function() {\n      var value = collection.shift();\n      return value[0];\n    }\n    this.front = function() {\n      return collection[0];\n    }\n    this.size = function() {\n      return collection.length;\n    }\n    this.isEmpty = function() {\n      return collection.length === 0;\n    }\n}"}